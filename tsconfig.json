{
	"compilerOptions": {
		"target": "ES2020", // Usa ES2020 o superior para compatibilidad con características más modernas
		"module": "ES2020", // Configura el sistema de módulos según ES2020
		"lib": ["ES2020", "DOM"], // Usa la biblioteca ES2020 junto con las APIs del DOM
		"outDir": "./build/js", // Directorio de salida para los archivos compilados
		"rootDir": "./src/ts", // Directorio raíz de los archivos fuente
		"strict": true, // Habilita todas las opciones estrictas de TypeScript
		"esModuleInterop": true, // Habilita la interoperabilidad con módulos ES y CommonJS
		"moduleResolution": "Bundler", // Utiliza la resolución de módulos adaptada a bundlers modernos
		"forceConsistentCasingInFileNames": true, // Enforce case sensitivity
		"skipLibCheck": true, // Omite la verificación de tipos en los archivos de declaración de bibliotecas
		"noImplicitAny": true, // Evita el uso de `any` implícito
		"noImplicitThis": true, // Evita el uso implícito de this sin tipar dentro de funciones, ayudando a prevenir errores donde this no es lo que se espera.
		"noFallthroughCasesInSwitch": true, // Evita que los casos en una declaración switch "caigan" al siguiente caso sin un break, lo cual es una fuente común de errores.
		"noUnusedLocals": true, // Elimina las variables locales no utilizadas
		"noUnusedParameters": true, // Elimina los parámetros no utilizados en funciones
		"noImplicitReturns": true, // Fuerza a que todas las funciones devuelvan un valor explícito
		"noUncheckedIndexedAccess": true, // Verifica que las propiedades de un índice existan antes de acceder
		"noImplicitOverride": true, // Requiere el uso de la palabra clave `override` para métodos que sobrescriben
		"resolveJsonModule": true, // Permite la importación de archivos JSON como módulos
		"isolatedModules": true, // Asegura que cada archivo actúe como un módulo independiente
		"exactOptionalPropertyTypes": true, // Maneja las propiedades opcionales con mayor precisión
		"incremental": true, // Habilita la compilación incremental para mejorar los tiempos de compilación
		"tsBuildInfoFile": "./build/.tsbuildinfo", // Archivo que almacena información de compilación incremental, como una cache.
		"useUnknownInCatchVariables": true, // Usa `unknown` en lugar de `any` para las variables en bloques catch
		"useDefineForClassFields": true, // Usa `define` para declarar campos en clases, más consistente con ES2020
		"removeComments": true // Elimina los comentarios del código compilado
	},
	"include": ["src/ts/**/*"], // Incluye todos los archivos dentro de la carpeta `src`
	"exclude": ["node_modules", "build"], // Excluye la carpeta `node_modules` y `build`
	"files": ["src/ts/index.ts"] // Especifica un solo archivo de entrada para compilar en un único archivo JavaScript
}
